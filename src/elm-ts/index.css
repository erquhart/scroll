@tailwind base;
@tailwind components;
@tailwind utilities;

.ProseMirror {
  > *:first-child {
    @apply mt-4;
  }
  h1 {
    @apply text-3xl font-extrabold mt-8 mb-5;
  }
  h1 code {
    @apply text-2xl;
  }
  h2 {
    @apply text-2xl font-extrabold mt-7 mb-4;
  }
  h2 code {
    @apply text-xl;
  }
  h3 {
    @apply text-xl font-bold mt-7 mb-4;
  }
  h3 code {
    @apply text-lg;
  }
  h4 {
    @apply text-lg font-bold mt-6 mb-3;
  }
  h4 code {
    @apply text-base;
  }
  p {
    @apply my-4;
  }
  ul {
    @apply list-disc;
  }
  ol {
    @apply list-decimal;
  }
  ol > li > ol {
    @apply list-[lower-alpha];
  }
  ol > li > ol > li > ol {
    @apply list-[lower-roman];
  }
  ol > li > ol > li > ol > li > ol {
    @apply list-decimal;
  }
  ol > li > ol > li > ol > li > ol > li > ol {
    @apply list-[lower-alpha];
  }
  ol > li > ol > li > ol > li > ol > li > ol > li > ol {
    @apply list-[lower-roman];
  }
  ol > li > ol > li > ol > li > ol > li > ol > li > ol > li > ol {
    @apply list-decimal;
  }
  ul,
  ol {
    @apply pl-6;
  }
  ul > li,
  ol > li {
    @apply my-1;
  }
  ul > li p,
  ol > li p {
    @apply my-0;
  }
  ul[data-type="taskList"] {
    @apply pl-1 list-none;
  }
  ul[data-type="taskList"] ul:not([data-type="taskList"]) {
    @apply list-disc;
  }
  ul[data-type="taskList"] ol:not([data-type="taskList"]) {
    @apply list-decimal;
  }
  ul[data-type="taskList"] :is(ol, ul) li:last-of-type {
    @apply mb-0;
  }
  ul[data-type="taskList"] li {
    @apply flex;
  }
  ul[data-type="taskList"] ul:not([data-type="taskList"]) li {
    @apply list-item;
  }
  ul[data-type="taskList"] ol:not([data-type="taskList"]) li {
    @apply list-item;
  }
  ul[data-type="taskList"] li > label {
    @apply flex-shrink-0 flex-grow-0 mr-2;
  }
  ul[data-type="taskList"] li > div {
    @apply flex-auto break-all;
  }
  input[type="checkbox"] {
    @apply checked:accent-yellow-700;
  }
  /* Tries to select top-level `ul`s and `ol`s only.
   *
   * :not(li) accounts for ordered and unordered lists
   * :not(li > div) accounts for checklists
   */
  *:not(li, li > div) > ul,
  *:not(li, li > div) > ol {
    @apply my-4;
  }
  blockquote {
    @apply my-6 pl-4 border-l-2 border-stone-500;
  }
  pre {
    @apply bg-stone-100 my-4 p-6 rounded-lg;
  }
  *:not(pre) > code {
    @apply p-1 rounded-md;
  }
  code {
    @apply text-sm bg-stone-100;
  }
  hr {
    @apply border-t-2 border-stone-300;
  }
  a {
    @apply text-yellow-600 hover:text-yellow-50 hover:bg-yellow-600 cursor-pointer rounded-sm underline transition duration-75;
  }
}

.ProseMirror-focused .is-editor-empty {
  @apply first:before:h-0 first:before:text-stone-400 first:before:float-left first:before:content-[attr(data-placeholder)] first:before:pointer-events-none;
}

button {
  @apply select-none;
}
